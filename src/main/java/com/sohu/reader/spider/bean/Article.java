/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.sohu.reader.spider.bean;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;

import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;

import org.hibernate.annotations.GenericGenerator;
import javax.persistence.*;

@Entity
@Table(name="articles")
public class Article implements org.apache.thrift.TBase<com.sohu.reader.article.Article, com.sohu.reader.article.Article._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Article");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SUMMARY_FIELD_DESC = new org.apache.thrift.protocol.TField("summary", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("content", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField VIEW_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("viewCount", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField ORIGINAL_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("originalUrl", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CHANNEL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("channelId", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField SOURCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sourceId", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField COMMENT_FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("commentFlag", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField ORDER_WEIGHT_FIELD_DESC = new org.apache.thrift.protocol.TField("orderWeight", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField SIMILAR_ARTICLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("similarArticleId", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField PUBLISH_AT_FIELD_DESC = new org.apache.thrift.protocol.TField("publishAt", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField CREATED_AT_FIELD_DESC = new org.apache.thrift.protocol.TField("createdAt", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField UPDATED_AT_FIELD_DESC = new org.apache.thrift.protocol.TField("updatedAt", org.apache.thrift.protocol.TType.I64, (short)15);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ArticleStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ArticleTupleSchemeFactory());
  }

  public long id; // required
  public String title; // required
  public String summary; // required
  public String content; // required
  public int viewCount; // required
  public String originalUrl; // required
  public long channelId; // required
  public long sourceId; // required
  public int commentFlag; // required
  public int status; // required
  public int orderWeight; // required
  public long similarArticleId; // required
  public long publishAt; // required
  public long createdAt; // required
  public long updatedAt; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    TITLE((short)2, "title"),
    SUMMARY((short)3, "summary"),
    CONTENT((short)4, "content"),
    VIEW_COUNT((short)5, "viewCount"),
    ORIGINAL_URL((short)6, "originalUrl"),
    CHANNEL_ID((short)7, "channelId"),
    SOURCE_ID((short)8, "sourceId"),
    COMMENT_FLAG((short)9, "commentFlag"),
    STATUS((short)10, "status"),
    ORDER_WEIGHT((short)11, "orderWeight"),
    SIMILAR_ARTICLE_ID((short)12, "similarArticleId"),
    PUBLISH_AT((short)13, "publishAt"),
    CREATED_AT((short)14, "createdAt"),
    UPDATED_AT((short)15, "updatedAt");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // TITLE
          return TITLE;
        case 3: // SUMMARY
          return SUMMARY;
        case 4: // CONTENT
          return CONTENT;
        case 5: // VIEW_COUNT
          return VIEW_COUNT;
        case 6: // ORIGINAL_URL
          return ORIGINAL_URL;
        case 7: // CHANNEL_ID
          return CHANNEL_ID;
        case 8: // SOURCE_ID
          return SOURCE_ID;
        case 9: // COMMENT_FLAG
          return COMMENT_FLAG;
        case 10: // STATUS
          return STATUS;
        case 11: // ORDER_WEIGHT
          return ORDER_WEIGHT;
        case 12: // SIMILAR_ARTICLE_ID
          return SIMILAR_ARTICLE_ID;
        case 13: // PUBLISH_AT
          return PUBLISH_AT;
        case 14: // CREATED_AT
          return CREATED_AT;
        case 15: // UPDATED_AT
          return UPDATED_AT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __VIEWCOUNT_ISSET_ID = 1;
  private static final int __CHANNELID_ISSET_ID = 2;
  private static final int __SOURCEID_ISSET_ID = 3;
  private static final int __COMMENTFLAG_ISSET_ID = 4;
  private static final int __STATUS_ISSET_ID = 5;
  private static final int __ORDERWEIGHT_ISSET_ID = 6;
  private static final int __SIMILARARTICLEID_ISSET_ID = 7;
  private static final int __PUBLISHAT_ISSET_ID = 8;
  private static final int __CREATEDAT_ISSET_ID = 9;
  private static final int __UPDATEDAT_ISSET_ID = 10;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUMMARY, new org.apache.thrift.meta_data.FieldMetaData("summary", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTENT, new org.apache.thrift.meta_data.FieldMetaData("content", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VIEW_COUNT, new org.apache.thrift.meta_data.FieldMetaData("viewCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORIGINAL_URL, new org.apache.thrift.meta_data.FieldMetaData("originalUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNEL_ID, new org.apache.thrift.meta_data.FieldMetaData("channelId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SOURCE_ID, new org.apache.thrift.meta_data.FieldMetaData("sourceId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.COMMENT_FLAG, new org.apache.thrift.meta_data.FieldMetaData("commentFlag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORDER_WEIGHT, new org.apache.thrift.meta_data.FieldMetaData("orderWeight", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SIMILAR_ARTICLE_ID, new org.apache.thrift.meta_data.FieldMetaData("similarArticleId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PUBLISH_AT, new org.apache.thrift.meta_data.FieldMetaData("publishAt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATED_AT, new org.apache.thrift.meta_data.FieldMetaData("createdAt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.UPDATED_AT, new org.apache.thrift.meta_data.FieldMetaData("updatedAt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(com.sohu.reader.article.Article.class, metaDataMap);
  }

  public Article() {
  }

  public Article(
          long id,
          String title,
          String summary,
          String content,
          int viewCount,
          String originalUrl,
          long channelId,
          long sourceId,
          int commentFlag,
          int status,
          int orderWeight,
          long similarArticleId,
          long publishAt,
          long createdAt,
          long updatedAt)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.title = title;
    this.summary = summary;
    this.content = content;
    this.viewCount = viewCount;
    setViewCountIsSet(true);
    this.originalUrl = originalUrl;
    this.channelId = channelId;
    setChannelIdIsSet(true);
    this.sourceId = sourceId;
    setSourceIdIsSet(true);
    this.commentFlag = commentFlag;
    setCommentFlagIsSet(true);
    this.status = status;
    setStatusIsSet(true);
    this.orderWeight = orderWeight;
    setOrderWeightIsSet(true);
    this.similarArticleId = similarArticleId;
    setSimilarArticleIdIsSet(true);
    this.publishAt = publishAt;
    setPublishAtIsSet(true);
    this.createdAt = createdAt;
    setCreatedAtIsSet(true);
    this.updatedAt = updatedAt;
    setUpdatedAtIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Article(com.sohu.reader.article.Article other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetSummary()) {
      this.summary = other.summary;
    }
    if (other.isSetContent()) {
      this.content = other.content;
    }
    this.viewCount = other.viewCount;
    if (other.isSetOriginalUrl()) {
      this.originalUrl = other.originalUrl;
    }
    this.channelId = other.channelId;
    this.sourceId = other.sourceId;
    this.commentFlag = other.commentFlag;
    this.status = other.status;
    this.orderWeight = other.orderWeight;
    this.similarArticleId = other.similarArticleId;
    this.publishAt = other.publishAt;
    this.createdAt = other.createdAt;
    this.updatedAt = other.updatedAt;
  }

  public com.sohu.reader.article.Article deepCopy() {
    return new com.sohu.reader.article.Article(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.title = null;
    this.summary = null;
    this.content = null;
    setViewCountIsSet(false);
    this.viewCount = 0;
    this.originalUrl = null;
    setChannelIdIsSet(false);
    this.channelId = 0;
    setSourceIdIsSet(false);
    this.sourceId = 0;
    setCommentFlagIsSet(false);
    this.commentFlag = 0;
    setStatusIsSet(false);
    this.status = 0;
    setOrderWeightIsSet(false);
    this.orderWeight = 0;
    setSimilarArticleIdIsSet(false);
    this.similarArticleId = 0;
    setPublishAtIsSet(false);
    this.publishAt = 0;
    setCreatedAtIsSet(false);
    this.createdAt = 0;
    setUpdatedAtIsSet(false);
    this.updatedAt = 0;
  }

  @Id 
  @GeneratedValue(generator = "identity") 
  @GenericGenerator(name = "identity", strategy = "identity") 
  @Column(name="id")
  public long getId() {
    return this.id;
  }

  public com.sohu.reader.article.Article setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  @Column(name="title")
  public String getTitle() {
    return this.title;
  }

  public com.sohu.reader.article.Article setTitle(String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  @Column(name="summary")
  public String getSummary() {
    return this.summary;
  }

  public com.sohu.reader.article.Article setSummary(String summary) {
    this.summary = summary;
    return this;
  }

  public void unsetSummary() {
    this.summary = null;
  }

  /** Returns true if field summary is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetSummary() {
    return this.summary != null;
  }

  public void setSummaryIsSet(boolean value) {
    if (!value) {
      this.summary = null;
    }
  }

  @Column(name="content")
  public String getContent() {
    return this.content;
  }

  public com.sohu.reader.article.Article setContent(String content) {
    this.content = content;
    return this;
  }

  public void unsetContent() {
    this.content = null;
  }

  /** Returns true if field content is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetContent() {
    return this.content != null;
  }

  public void setContentIsSet(boolean value) {
    if (!value) {
      this.content = null;
    }
  }

  @Column(name="view_count")
  public int getViewCount() {
    return this.viewCount;
  }

  public com.sohu.reader.article.Article setViewCount(int viewCount) {
    this.viewCount = viewCount;
    setViewCountIsSet(true);
    return this;
  }

  public void unsetViewCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VIEWCOUNT_ISSET_ID);
  }

  /** Returns true if field viewCount is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetViewCount() {
    return EncodingUtils.testBit(__isset_bitfield, __VIEWCOUNT_ISSET_ID);
  }

  public void setViewCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VIEWCOUNT_ISSET_ID, value);
  }

  @Column(name="original_url")
  public String getOriginalUrl() {
    return this.originalUrl;
  }

  public com.sohu.reader.article.Article setOriginalUrl(String originalUrl) {
    this.originalUrl = originalUrl;
    return this;
  }

  public void unsetOriginalUrl() {
    this.originalUrl = null;
  }

  /** Returns true if field originalUrl is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetOriginalUrl() {
    return this.originalUrl != null;
  }

  public void setOriginalUrlIsSet(boolean value) {
    if (!value) {
      this.originalUrl = null;
    }
  }

  @Column(name="channel_id")
  public long getChannelId() {
    return this.channelId;
  }

  public com.sohu.reader.article.Article setChannelId(long channelId) {
    this.channelId = channelId;
    setChannelIdIsSet(true);
    return this;
  }

  public void unsetChannelId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CHANNELID_ISSET_ID);
  }

  /** Returns true if field channelId is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetChannelId() {
    return EncodingUtils.testBit(__isset_bitfield, __CHANNELID_ISSET_ID);
  }

  public void setChannelIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CHANNELID_ISSET_ID, value);
  }

  @Column(name="source_id")
  public long getSourceId() {
    return this.sourceId;
  }

  public com.sohu.reader.article.Article setSourceId(long sourceId) {
    this.sourceId = sourceId;
    setSourceIdIsSet(true);
    return this;
  }

  public void unsetSourceId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SOURCEID_ISSET_ID);
  }

  /** Returns true if field sourceId is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetSourceId() {
    return EncodingUtils.testBit(__isset_bitfield, __SOURCEID_ISSET_ID);
  }

  public void setSourceIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SOURCEID_ISSET_ID, value);
  }

  @Column(name="comment_flag")
  public int getCommentFlag() {
    return this.commentFlag;
  }

  public com.sohu.reader.article.Article setCommentFlag(int commentFlag) {
    this.commentFlag = commentFlag;
    setCommentFlagIsSet(true);
    return this;
  }

  public void unsetCommentFlag() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COMMENTFLAG_ISSET_ID);
  }

  /** Returns true if field commentFlag is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetCommentFlag() {
    return EncodingUtils.testBit(__isset_bitfield, __COMMENTFLAG_ISSET_ID);
  }

  public void setCommentFlagIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COMMENTFLAG_ISSET_ID, value);
  }

  @Column(name="status")
  public int getStatus() {
    return this.status;
  }

  public com.sohu.reader.article.Article setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  @Column(name="order_weight")
  public int getOrderWeight() {
    return this.orderWeight;
  }

  public com.sohu.reader.article.Article setOrderWeight(int orderWeight) {
    this.orderWeight = orderWeight;
    setOrderWeightIsSet(true);
    return this;
  }

  public void unsetOrderWeight() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDERWEIGHT_ISSET_ID);
  }

  /** Returns true if field orderWeight is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetOrderWeight() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDERWEIGHT_ISSET_ID);
  }

  public void setOrderWeightIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDERWEIGHT_ISSET_ID, value);
  }

  @Column(name="similar_article_id")
  public long getSimilarArticleId() {
    return this.similarArticleId;
  }

  public com.sohu.reader.article.Article setSimilarArticleId(long similarArticleId) {
    this.similarArticleId = similarArticleId;
    setSimilarArticleIdIsSet(true);
    return this;
  }

  public void unsetSimilarArticleId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SIMILARARTICLEID_ISSET_ID);
  }

  /** Returns true if field similarArticleId is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetSimilarArticleId() {
    return EncodingUtils.testBit(__isset_bitfield, __SIMILARARTICLEID_ISSET_ID);
  }

  public void setSimilarArticleIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SIMILARARTICLEID_ISSET_ID, value);
  }

  @Column(name="publish_at")
  public long getPublishAt() {
    return this.publishAt;
  }

  public com.sohu.reader.article.Article setPublishAt(long publishAt) {
    this.publishAt = publishAt;
    setPublishAtIsSet(true);
    return this;
  }

  public void unsetPublishAt() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PUBLISHAT_ISSET_ID);
  }

  /** Returns true if field publishAt is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetPublishAt() {
    return EncodingUtils.testBit(__isset_bitfield, __PUBLISHAT_ISSET_ID);
  }

  public void setPublishAtIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PUBLISHAT_ISSET_ID, value);
  }

  @Column(name="created_at")
  public long getCreatedAt() {
    return this.createdAt;
  }

  public com.sohu.reader.article.Article setCreatedAt(long createdAt) {
    this.createdAt = createdAt;
    setCreatedAtIsSet(true);
    return this;
  }

  public void unsetCreatedAt() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATEDAT_ISSET_ID);
  }

  /** Returns true if field createdAt is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetCreatedAt() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATEDAT_ISSET_ID);
  }

  public void setCreatedAtIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATEDAT_ISSET_ID, value);
  }

  @Column(name="updated_at")
  public long getUpdatedAt() {
    return this.updatedAt;
  }

  public com.sohu.reader.article.Article setUpdatedAt(long updatedAt) {
    this.updatedAt = updatedAt;
    setUpdatedAtIsSet(true);
    return this;
  }

  public void unsetUpdatedAt() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __UPDATEDAT_ISSET_ID);
  }

  /** Returns true if field updatedAt is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetUpdatedAt() {
    return EncodingUtils.testBit(__isset_bitfield, __UPDATEDAT_ISSET_ID);
  }

  public void setUpdatedAtIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __UPDATEDAT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((String)value);
      }
      break;

    case SUMMARY:
      if (value == null) {
        unsetSummary();
      } else {
        setSummary((String)value);
      }
      break;

    case CONTENT:
      if (value == null) {
        unsetContent();
      } else {
        setContent((String)value);
      }
      break;

    case VIEW_COUNT:
      if (value == null) {
        unsetViewCount();
      } else {
        setViewCount((Integer)value);
      }
      break;

    case ORIGINAL_URL:
      if (value == null) {
        unsetOriginalUrl();
      } else {
        setOriginalUrl((String)value);
      }
      break;

    case CHANNEL_ID:
      if (value == null) {
        unsetChannelId();
      } else {
        setChannelId((Long)value);
      }
      break;

    case SOURCE_ID:
      if (value == null) {
        unsetSourceId();
      } else {
        setSourceId((Long)value);
      }
      break;

    case COMMENT_FLAG:
      if (value == null) {
        unsetCommentFlag();
      } else {
        setCommentFlag((Integer)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    case ORDER_WEIGHT:
      if (value == null) {
        unsetOrderWeight();
      } else {
        setOrderWeight((Integer)value);
      }
      break;

    case SIMILAR_ARTICLE_ID:
      if (value == null) {
        unsetSimilarArticleId();
      } else {
        setSimilarArticleId((Long)value);
      }
      break;

    case PUBLISH_AT:
      if (value == null) {
        unsetPublishAt();
      } else {
        setPublishAt((Long)value);
      }
      break;

    case CREATED_AT:
      if (value == null) {
        unsetCreatedAt();
      } else {
        setCreatedAt((Long)value);
      }
      break;

    case UPDATED_AT:
      if (value == null) {
        unsetUpdatedAt();
      } else {
        setUpdatedAt((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case TITLE:
      return getTitle();

    case SUMMARY:
      return getSummary();

    case CONTENT:
      return getContent();

    case VIEW_COUNT:
      return Integer.valueOf(getViewCount());

    case ORIGINAL_URL:
      return getOriginalUrl();

    case CHANNEL_ID:
      return Long.valueOf(getChannelId());

    case SOURCE_ID:
      return Long.valueOf(getSourceId());

    case COMMENT_FLAG:
      return Integer.valueOf(getCommentFlag());

    case STATUS:
      return Integer.valueOf(getStatus());

    case ORDER_WEIGHT:
      return Integer.valueOf(getOrderWeight());

    case SIMILAR_ARTICLE_ID:
      return Long.valueOf(getSimilarArticleId());

    case PUBLISH_AT:
      return Long.valueOf(getPublishAt());

    case CREATED_AT:
      return Long.valueOf(getCreatedAt());

    case UPDATED_AT:
      return Long.valueOf(getUpdatedAt());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case TITLE:
      return isSetTitle();
    case SUMMARY:
      return isSetSummary();
    case CONTENT:
      return isSetContent();
    case VIEW_COUNT:
      return isSetViewCount();
    case ORIGINAL_URL:
      return isSetOriginalUrl();
    case CHANNEL_ID:
      return isSetChannelId();
    case SOURCE_ID:
      return isSetSourceId();
    case COMMENT_FLAG:
      return isSetCommentFlag();
    case STATUS:
      return isSetStatus();
    case ORDER_WEIGHT:
      return isSetOrderWeight();
    case SIMILAR_ARTICLE_ID:
      return isSetSimilarArticleId();
    case PUBLISH_AT:
      return isSetPublishAt();
    case CREATED_AT:
      return isSetCreatedAt();
    case UPDATED_AT:
      return isSetUpdatedAt();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof com.sohu.reader.article.Article)
      return this.equals((com.sohu.reader.article.Article)that);
    return false;
  }

  public boolean equals(com.sohu.reader.article.Article that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_summary = true && this.isSetSummary();
    boolean that_present_summary = true && that.isSetSummary();
    if (this_present_summary || that_present_summary) {
      if (!(this_present_summary && that_present_summary))
        return false;
      if (!this.summary.equals(that.summary))
        return false;
    }

    boolean this_present_content = true && this.isSetContent();
    boolean that_present_content = true && that.isSetContent();
    if (this_present_content || that_present_content) {
      if (!(this_present_content && that_present_content))
        return false;
      if (!this.content.equals(that.content))
        return false;
    }

    boolean this_present_viewCount = true;
    boolean that_present_viewCount = true;
    if (this_present_viewCount || that_present_viewCount) {
      if (!(this_present_viewCount && that_present_viewCount))
        return false;
      if (this.viewCount != that.viewCount)
        return false;
    }

    boolean this_present_originalUrl = true && this.isSetOriginalUrl();
    boolean that_present_originalUrl = true && that.isSetOriginalUrl();
    if (this_present_originalUrl || that_present_originalUrl) {
      if (!(this_present_originalUrl && that_present_originalUrl))
        return false;
      if (!this.originalUrl.equals(that.originalUrl))
        return false;
    }

    boolean this_present_channelId = true;
    boolean that_present_channelId = true;
    if (this_present_channelId || that_present_channelId) {
      if (!(this_present_channelId && that_present_channelId))
        return false;
      if (this.channelId != that.channelId)
        return false;
    }

    boolean this_present_sourceId = true;
    boolean that_present_sourceId = true;
    if (this_present_sourceId || that_present_sourceId) {
      if (!(this_present_sourceId && that_present_sourceId))
        return false;
      if (this.sourceId != that.sourceId)
        return false;
    }

    boolean this_present_commentFlag = true;
    boolean that_present_commentFlag = true;
    if (this_present_commentFlag || that_present_commentFlag) {
      if (!(this_present_commentFlag && that_present_commentFlag))
        return false;
      if (this.commentFlag != that.commentFlag)
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_orderWeight = true;
    boolean that_present_orderWeight = true;
    if (this_present_orderWeight || that_present_orderWeight) {
      if (!(this_present_orderWeight && that_present_orderWeight))
        return false;
      if (this.orderWeight != that.orderWeight)
        return false;
    }

    boolean this_present_similarArticleId = true;
    boolean that_present_similarArticleId = true;
    if (this_present_similarArticleId || that_present_similarArticleId) {
      if (!(this_present_similarArticleId && that_present_similarArticleId))
        return false;
      if (this.similarArticleId != that.similarArticleId)
        return false;
    }

    boolean this_present_publishAt = true;
    boolean that_present_publishAt = true;
    if (this_present_publishAt || that_present_publishAt) {
      if (!(this_present_publishAt && that_present_publishAt))
        return false;
      if (this.publishAt != that.publishAt)
        return false;
    }

    boolean this_present_createdAt = true;
    boolean that_present_createdAt = true;
    if (this_present_createdAt || that_present_createdAt) {
      if (!(this_present_createdAt && that_present_createdAt))
        return false;
      if (this.createdAt != that.createdAt)
        return false;
    }

    boolean this_present_updatedAt = true;
    boolean that_present_updatedAt = true;
    if (this_present_updatedAt || that_present_updatedAt) {
      if (!(this_present_updatedAt && that_present_updatedAt))
        return false;
      if (this.updatedAt != that.updatedAt)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(com.sohu.reader.article.Article other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    com.sohu.reader.article.Article typedOther = (com.sohu.reader.article.Article)other;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(typedOther.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, typedOther.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTitle()).compareTo(typedOther.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, typedOther.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSummary()).compareTo(typedOther.isSetSummary());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSummary()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.summary, typedOther.summary);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContent()).compareTo(typedOther.isSetContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.content, typedOther.content);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetViewCount()).compareTo(typedOther.isSetViewCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetViewCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.viewCount, typedOther.viewCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOriginalUrl()).compareTo(typedOther.isSetOriginalUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOriginalUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originalUrl, typedOther.originalUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannelId()).compareTo(typedOther.isSetChannelId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelId, typedOther.channelId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSourceId()).compareTo(typedOther.isSetSourceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSourceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sourceId, typedOther.sourceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCommentFlag()).compareTo(typedOther.isSetCommentFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCommentFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.commentFlag, typedOther.commentFlag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(typedOther.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, typedOther.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderWeight()).compareTo(typedOther.isSetOrderWeight());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderWeight()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderWeight, typedOther.orderWeight);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSimilarArticleId()).compareTo(typedOther.isSetSimilarArticleId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSimilarArticleId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.similarArticleId, typedOther.similarArticleId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPublishAt()).compareTo(typedOther.isSetPublishAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublishAt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.publishAt, typedOther.publishAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreatedAt()).compareTo(typedOther.isSetCreatedAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatedAt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createdAt, typedOther.createdAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdatedAt()).compareTo(typedOther.isSetUpdatedAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdatedAt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updatedAt, typedOther.updatedAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Article(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("summary:");
    if (this.summary == null) {
      sb.append("null");
    } else {
      sb.append(this.summary);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("content:");
    if (this.content == null) {
      sb.append("null");
    } else {
      sb.append(this.content);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("viewCount:");
    sb.append(this.viewCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("originalUrl:");
    if (this.originalUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.originalUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channelId:");
    sb.append(this.channelId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sourceId:");
    sb.append(this.sourceId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("commentFlag:");
    sb.append(this.commentFlag);
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderWeight:");
    sb.append(this.orderWeight);
    first = false;
    if (!first) sb.append(", ");
    sb.append("similarArticleId:");
    sb.append(this.similarArticleId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("publishAt:");
    sb.append(this.publishAt);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createdAt:");
    sb.append(this.createdAt);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updatedAt:");
    sb.append(this.updatedAt);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ArticleStandardSchemeFactory implements SchemeFactory {
    public ArticleStandardScheme getScheme() {
      return new ArticleStandardScheme();
    }
  }

  private static class ArticleStandardScheme extends StandardScheme<com.sohu.reader.article.Article> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, com.sohu.reader.article.Article struct) throws TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SUMMARY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.summary = iprot.readString();
              struct.setSummaryIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.content = iprot.readString();
              struct.setContentIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // VIEW_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.viewCount = iprot.readI32();
              struct.setViewCountIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ORIGINAL_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.originalUrl = iprot.readString();
              struct.setOriginalUrlIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CHANNEL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.channelId = iprot.readI64();
              struct.setChannelIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SOURCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sourceId = iprot.readI64();
              struct.setSourceIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // COMMENT_FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.commentFlag = iprot.readI32();
              struct.setCommentFlagIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ORDER_WEIGHT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orderWeight = iprot.readI32();
              struct.setOrderWeightIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SIMILAR_ARTICLE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.similarArticleId = iprot.readI64();
              struct.setSimilarArticleIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // PUBLISH_AT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.publishAt = iprot.readI64();
              struct.setPublishAtIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CREATED_AT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createdAt = iprot.readI64();
              struct.setCreatedAtIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // UPDATED_AT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.updatedAt = iprot.readI64();
              struct.setUpdatedAtIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, com.sohu.reader.article.Article struct) throws TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI64(struct.id);
      oprot.writeFieldEnd();
      if (struct.title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(struct.title);
        oprot.writeFieldEnd();
      }
      if (struct.summary != null) {
        oprot.writeFieldBegin(SUMMARY_FIELD_DESC);
        oprot.writeString(struct.summary);
        oprot.writeFieldEnd();
      }
      if (struct.content != null) {
        oprot.writeFieldBegin(CONTENT_FIELD_DESC);
        oprot.writeString(struct.content);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(VIEW_COUNT_FIELD_DESC);
      oprot.writeI32(struct.viewCount);
      oprot.writeFieldEnd();
      if (struct.originalUrl != null) {
        oprot.writeFieldBegin(ORIGINAL_URL_FIELD_DESC);
        oprot.writeString(struct.originalUrl);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CHANNEL_ID_FIELD_DESC);
      oprot.writeI64(struct.channelId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SOURCE_ID_FIELD_DESC);
      oprot.writeI64(struct.sourceId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COMMENT_FLAG_FIELD_DESC);
      oprot.writeI32(struct.commentFlag);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ORDER_WEIGHT_FIELD_DESC);
      oprot.writeI32(struct.orderWeight);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SIMILAR_ARTICLE_ID_FIELD_DESC);
      oprot.writeI64(struct.similarArticleId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PUBLISH_AT_FIELD_DESC);
      oprot.writeI64(struct.publishAt);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATED_AT_FIELD_DESC);
      oprot.writeI64(struct.createdAt);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(UPDATED_AT_FIELD_DESC);
      oprot.writeI64(struct.updatedAt);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ArticleTupleSchemeFactory implements SchemeFactory {
    public ArticleTupleScheme getScheme() {
      return new ArticleTupleScheme();
    }
  }

  private static class ArticleTupleScheme extends TupleScheme<com.sohu.reader.article.Article> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, com.sohu.reader.article.Article struct) throws TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetTitle()) {
        optionals.set(1);
      }
      if (struct.isSetSummary()) {
        optionals.set(2);
      }
      if (struct.isSetContent()) {
        optionals.set(3);
      }
      if (struct.isSetViewCount()) {
        optionals.set(4);
      }
      if (struct.isSetOriginalUrl()) {
        optionals.set(5);
      }
      if (struct.isSetChannelId()) {
        optionals.set(6);
      }
      if (struct.isSetSourceId()) {
        optionals.set(7);
      }
      if (struct.isSetCommentFlag()) {
        optionals.set(8);
      }
      if (struct.isSetStatus()) {
        optionals.set(9);
      }
      if (struct.isSetOrderWeight()) {
        optionals.set(10);
      }
      if (struct.isSetSimilarArticleId()) {
        optionals.set(11);
      }
      if (struct.isSetPublishAt()) {
        optionals.set(12);
      }
      if (struct.isSetCreatedAt()) {
        optionals.set(13);
      }
      if (struct.isSetUpdatedAt()) {
        optionals.set(14);
      }
      oprot.writeBitSet(optionals, 15);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetSummary()) {
        oprot.writeString(struct.summary);
      }
      if (struct.isSetContent()) {
        oprot.writeString(struct.content);
      }
      if (struct.isSetViewCount()) {
        oprot.writeI32(struct.viewCount);
      }
      if (struct.isSetOriginalUrl()) {
        oprot.writeString(struct.originalUrl);
      }
      if (struct.isSetChannelId()) {
        oprot.writeI64(struct.channelId);
      }
      if (struct.isSetSourceId()) {
        oprot.writeI64(struct.sourceId);
      }
      if (struct.isSetCommentFlag()) {
        oprot.writeI32(struct.commentFlag);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status);
      }
      if (struct.isSetOrderWeight()) {
        oprot.writeI32(struct.orderWeight);
      }
      if (struct.isSetSimilarArticleId()) {
        oprot.writeI64(struct.similarArticleId);
      }
      if (struct.isSetPublishAt()) {
        oprot.writeI64(struct.publishAt);
      }
      if (struct.isSetCreatedAt()) {
        oprot.writeI64(struct.createdAt);
      }
      if (struct.isSetUpdatedAt()) {
        oprot.writeI64(struct.updatedAt);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, com.sohu.reader.article.Article struct) throws TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(15);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(2)) {
        struct.summary = iprot.readString();
        struct.setSummaryIsSet(true);
      }
      if (incoming.get(3)) {
        struct.content = iprot.readString();
        struct.setContentIsSet(true);
      }
      if (incoming.get(4)) {
        struct.viewCount = iprot.readI32();
        struct.setViewCountIsSet(true);
      }
      if (incoming.get(5)) {
        struct.originalUrl = iprot.readString();
        struct.setOriginalUrlIsSet(true);
      }
      if (incoming.get(6)) {
        struct.channelId = iprot.readI64();
        struct.setChannelIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.sourceId = iprot.readI64();
        struct.setSourceIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.commentFlag = iprot.readI32();
        struct.setCommentFlagIsSet(true);
      }
      if (incoming.get(9)) {
        struct.status = iprot.readI32();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(10)) {
        struct.orderWeight = iprot.readI32();
        struct.setOrderWeightIsSet(true);
      }
      if (incoming.get(11)) {
        struct.similarArticleId = iprot.readI64();
        struct.setSimilarArticleIdIsSet(true);
      }
      if (incoming.get(12)) {
        struct.publishAt = iprot.readI64();
        struct.setPublishAtIsSet(true);
      }
      if (incoming.get(13)) {
        struct.createdAt = iprot.readI64();
        struct.setCreatedAtIsSet(true);
      }
      if (incoming.get(14)) {
        struct.updatedAt = iprot.readI64();
        struct.setUpdatedAtIsSet(true);
      }
    }
  }

}

