/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.sohu.reader.spider.bean;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.EncodingUtils;

import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;

import org.hibernate.annotations.GenericGenerator;
import javax.persistence.*;

@Entity
@Table(name="article_vos")
public class ArticleVO implements org.apache.thrift.TBase<ArticleVO, ArticleVO._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ArticleVO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SUMMARY_FIELD_DESC = new org.apache.thrift.protocol.TField("summary", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("content", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField VIEW_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("viewCount", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField ORIGINAL_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("originalUrl", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CHANNEL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("channelId", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField SOURCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sourceId", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField COMMENT_FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("commentFlag", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField ORDER_WEIGHT_FIELD_DESC = new org.apache.thrift.protocol.TField("orderWeight", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField SIMILAR_ARTICLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("similarArticleId", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField PUBLISH_AT_FIELD_DESC = new org.apache.thrift.protocol.TField("publishAt", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField CREATED_AT_FIELD_DESC = new org.apache.thrift.protocol.TField("createdAt", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField UPDATED_AT_FIELD_DESC = new org.apache.thrift.protocol.TField("updatedAt", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField COVER_FIELD_DESC = new org.apache.thrift.protocol.TField("cover", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField ALL_PICS_FIELD_DESC = new org.apache.thrift.protocol.TField("allPics", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField SOURCE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("sourceName", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField PIC_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("picType", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField RECOMMEND_CHANNEL_FIELD_DESC = new org.apache.thrift.protocol.TField("recommendChannel", org.apache.thrift.protocol.TType.I64, (short)20);
  private static final org.apache.thrift.protocol.TField SPRING_BREEZE_RECOMMEND_FIELD_DESC = new org.apache.thrift.protocol.TField("springBreezeRecommend", org.apache.thrift.protocol.TType.I32, (short)21);
  private static final org.apache.thrift.protocol.TField CHANNEL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("channelName", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("level", org.apache.thrift.protocol.TType.I32, (short)23);
  private static final org.apache.thrift.protocol.TField SCORE_FIELD_DESC = new org.apache.thrift.protocol.TField("score", org.apache.thrift.protocol.TType.DOUBLE, (short)24);
  private static final org.apache.thrift.protocol.TField SCORE_ITEM_FIELD_DESC = new org.apache.thrift.protocol.TField("scoreItem", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField COMMENT_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("commentCount", org.apache.thrift.protocol.TType.I32, (short)26);
  private static final org.apache.thrift.protocol.TField SHOW_MODEL_FIELD_DESC = new org.apache.thrift.protocol.TField("showModel", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField GUIDANCE_FIELD_DESC = new org.apache.thrift.protocol.TField("guidance", org.apache.thrift.protocol.TType.STRING, (short)28);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ArticleVOStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ArticleVOTupleSchemeFactory());
  }

  public long id; // required
  public String title; // required
  public String summary; // required
  public String content; // required
  public int viewCount; // required
  public String originalUrl; // required
  public long channelId; // required
  public long sourceId; // required
  public int commentFlag; // required
  public int status; // required
  public int orderWeight; // required
  public long similarArticleId; // required
  public String publishAt; // required
  public String createdAt; // required
  public String updatedAt; // required
  public String cover; // required
  public String allPics; // required
  public String sourceName; // required
  public String picType; // required
  public long recommendChannel; // required
  public int springBreezeRecommend; // required
  public String channelName; // required
  public int level; // required
  public double score; // required
  public String scoreItem; // required
  public int commentCount; // required
  public String showModel; // required
  public String guidance; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    TITLE((short)2, "title"),
    SUMMARY((short)3, "summary"),
    CONTENT((short)4, "content"),
    VIEW_COUNT((short)5, "viewCount"),
    ORIGINAL_URL((short)6, "originalUrl"),
    CHANNEL_ID((short)7, "channelId"),
    SOURCE_ID((short)8, "sourceId"),
    COMMENT_FLAG((short)9, "commentFlag"),
    STATUS((short)10, "status"),
    ORDER_WEIGHT((short)11, "orderWeight"),
    SIMILAR_ARTICLE_ID((short)12, "similarArticleId"),
    PUBLISH_AT((short)13, "publishAt"),
    CREATED_AT((short)14, "createdAt"),
    UPDATED_AT((short)15, "updatedAt"),
    COVER((short)16, "cover"),
    ALL_PICS((short)17, "allPics"),
    SOURCE_NAME((short)18, "sourceName"),
    PIC_TYPE((short)19, "picType"),
    RECOMMEND_CHANNEL((short)20, "recommendChannel"),
    SPRING_BREEZE_RECOMMEND((short)21, "springBreezeRecommend"),
    CHANNEL_NAME((short)22, "channelName"),
    LEVEL((short)23, "level"),
    SCORE((short)24, "score"),
    SCORE_ITEM((short)25, "scoreItem"),
    COMMENT_COUNT((short)26, "commentCount"),
    SHOW_MODEL((short)27, "showModel"),
    GUIDANCE((short)28, "guidance");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // TITLE
          return TITLE;
        case 3: // SUMMARY
          return SUMMARY;
        case 4: // CONTENT
          return CONTENT;
        case 5: // VIEW_COUNT
          return VIEW_COUNT;
        case 6: // ORIGINAL_URL
          return ORIGINAL_URL;
        case 7: // CHANNEL_ID
          return CHANNEL_ID;
        case 8: // SOURCE_ID
          return SOURCE_ID;
        case 9: // COMMENT_FLAG
          return COMMENT_FLAG;
        case 10: // STATUS
          return STATUS;
        case 11: // ORDER_WEIGHT
          return ORDER_WEIGHT;
        case 12: // SIMILAR_ARTICLE_ID
          return SIMILAR_ARTICLE_ID;
        case 13: // PUBLISH_AT
          return PUBLISH_AT;
        case 14: // CREATED_AT
          return CREATED_AT;
        case 15: // UPDATED_AT
          return UPDATED_AT;
        case 16: // COVER
          return COVER;
        case 17: // ALL_PICS
          return ALL_PICS;
        case 18: // SOURCE_NAME
          return SOURCE_NAME;
        case 19: // PIC_TYPE
          return PIC_TYPE;
        case 20: // RECOMMEND_CHANNEL
          return RECOMMEND_CHANNEL;
        case 21: // SPRING_BREEZE_RECOMMEND
          return SPRING_BREEZE_RECOMMEND;
        case 22: // CHANNEL_NAME
          return CHANNEL_NAME;
        case 23: // LEVEL
          return LEVEL;
        case 24: // SCORE
          return SCORE;
        case 25: // SCORE_ITEM
          return SCORE_ITEM;
        case 26: // COMMENT_COUNT
          return COMMENT_COUNT;
        case 27: // SHOW_MODEL
          return SHOW_MODEL;
        case 28: // GUIDANCE
          return GUIDANCE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __VIEWCOUNT_ISSET_ID = 1;
  private static final int __CHANNELID_ISSET_ID = 2;
  private static final int __SOURCEID_ISSET_ID = 3;
  private static final int __COMMENTFLAG_ISSET_ID = 4;
  private static final int __STATUS_ISSET_ID = 5;
  private static final int __ORDERWEIGHT_ISSET_ID = 6;
  private static final int __SIMILARARTICLEID_ISSET_ID = 7;
  private static final int __RECOMMENDCHANNEL_ISSET_ID = 8;
  private static final int __SPRINGBREEZERECOMMEND_ISSET_ID = 9;
  private static final int __LEVEL_ISSET_ID = 10;
  private static final int __SCORE_ISSET_ID = 11;
  private static final int __COMMENTCOUNT_ISSET_ID = 12;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUMMARY, new org.apache.thrift.meta_data.FieldMetaData("summary", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTENT, new org.apache.thrift.meta_data.FieldMetaData("content", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VIEW_COUNT, new org.apache.thrift.meta_data.FieldMetaData("viewCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORIGINAL_URL, new org.apache.thrift.meta_data.FieldMetaData("originalUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNEL_ID, new org.apache.thrift.meta_data.FieldMetaData("channelId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SOURCE_ID, new org.apache.thrift.meta_data.FieldMetaData("sourceId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.COMMENT_FLAG, new org.apache.thrift.meta_data.FieldMetaData("commentFlag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORDER_WEIGHT, new org.apache.thrift.meta_data.FieldMetaData("orderWeight", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SIMILAR_ARTICLE_ID, new org.apache.thrift.meta_data.FieldMetaData("similarArticleId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PUBLISH_AT, new org.apache.thrift.meta_data.FieldMetaData("publishAt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATED_AT, new org.apache.thrift.meta_data.FieldMetaData("createdAt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATED_AT, new org.apache.thrift.meta_data.FieldMetaData("updatedAt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COVER, new org.apache.thrift.meta_data.FieldMetaData("cover", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ALL_PICS, new org.apache.thrift.meta_data.FieldMetaData("allPics", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SOURCE_NAME, new org.apache.thrift.meta_data.FieldMetaData("sourceName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PIC_TYPE, new org.apache.thrift.meta_data.FieldMetaData("picType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOMMEND_CHANNEL, new org.apache.thrift.meta_data.FieldMetaData("recommendChannel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SPRING_BREEZE_RECOMMEND, new org.apache.thrift.meta_data.FieldMetaData("springBreezeRecommend", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CHANNEL_NAME, new org.apache.thrift.meta_data.FieldMetaData("channelName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LEVEL, new org.apache.thrift.meta_data.FieldMetaData("level", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SCORE, new org.apache.thrift.meta_data.FieldMetaData("score", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SCORE_ITEM, new org.apache.thrift.meta_data.FieldMetaData("scoreItem", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMMENT_COUNT, new org.apache.thrift.meta_data.FieldMetaData("commentCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SHOW_MODEL, new org.apache.thrift.meta_data.FieldMetaData("showModel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GUIDANCE, new org.apache.thrift.meta_data.FieldMetaData("guidance", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ArticleVO.class, metaDataMap);
  }

  public ArticleVO() {
  }

  public ArticleVO(
          long id,
          String title,
          String summary,
          String content,
          int viewCount,
          String originalUrl,
          long channelId,
          long sourceId,
          int commentFlag,
          int status,
          int orderWeight,
          long similarArticleId,
          String publishAt,
          String createdAt,
          String updatedAt,
          String cover,
          String allPics,
          String sourceName,
          String picType,
          long recommendChannel,
          int springBreezeRecommend,
          String channelName,
          int level,
          double score,
          String scoreItem,
          int commentCount,
          String showModel,
          String guidance)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.title = title;
    this.summary = summary;
    this.content = content;
    this.viewCount = viewCount;
    setViewCountIsSet(true);
    this.originalUrl = originalUrl;
    this.channelId = channelId;
    setChannelIdIsSet(true);
    this.sourceId = sourceId;
    setSourceIdIsSet(true);
    this.commentFlag = commentFlag;
    setCommentFlagIsSet(true);
    this.status = status;
    setStatusIsSet(true);
    this.orderWeight = orderWeight;
    setOrderWeightIsSet(true);
    this.similarArticleId = similarArticleId;
    setSimilarArticleIdIsSet(true);
    this.publishAt = publishAt;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.cover = cover;
    this.allPics = allPics;
    this.sourceName = sourceName;
    this.picType = picType;
    this.recommendChannel = recommendChannel;
    setRecommendChannelIsSet(true);
    this.springBreezeRecommend = springBreezeRecommend;
    setSpringBreezeRecommendIsSet(true);
    this.channelName = channelName;
    this.level = level;
    setLevelIsSet(true);
    this.score = score;
    setScoreIsSet(true);
    this.scoreItem = scoreItem;
    this.commentCount = commentCount;
    setCommentCountIsSet(true);
    this.showModel = showModel;
    this.guidance = guidance;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ArticleVO(ArticleVO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetSummary()) {
      this.summary = other.summary;
    }
    if (other.isSetContent()) {
      this.content = other.content;
    }
    this.viewCount = other.viewCount;
    if (other.isSetOriginalUrl()) {
      this.originalUrl = other.originalUrl;
    }
    this.channelId = other.channelId;
    this.sourceId = other.sourceId;
    this.commentFlag = other.commentFlag;
    this.status = other.status;
    this.orderWeight = other.orderWeight;
    this.similarArticleId = other.similarArticleId;
    if (other.isSetPublishAt()) {
      this.publishAt = other.publishAt;
    }
    if (other.isSetCreatedAt()) {
      this.createdAt = other.createdAt;
    }
    if (other.isSetUpdatedAt()) {
      this.updatedAt = other.updatedAt;
    }
    if (other.isSetCover()) {
      this.cover = other.cover;
    }
    if (other.isSetAllPics()) {
      this.allPics = other.allPics;
    }
    if (other.isSetSourceName()) {
      this.sourceName = other.sourceName;
    }
    if (other.isSetPicType()) {
      this.picType = other.picType;
    }
    this.recommendChannel = other.recommendChannel;
    this.springBreezeRecommend = other.springBreezeRecommend;
    if (other.isSetChannelName()) {
      this.channelName = other.channelName;
    }
    this.level = other.level;
    this.score = other.score;
    if (other.isSetScoreItem()) {
      this.scoreItem = other.scoreItem;
    }
    this.commentCount = other.commentCount;
    if (other.isSetShowModel()) {
      this.showModel = other.showModel;
    }
    if (other.isSetGuidance()) {
      this.guidance = other.guidance;
    }
  }

  public ArticleVO deepCopy() {
    return new ArticleVO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.title = null;
    this.summary = null;
    this.content = null;
    setViewCountIsSet(false);
    this.viewCount = 0;
    this.originalUrl = null;
    setChannelIdIsSet(false);
    this.channelId = 0;
    setSourceIdIsSet(false);
    this.sourceId = 0;
    setCommentFlagIsSet(false);
    this.commentFlag = 0;
    setStatusIsSet(false);
    this.status = 0;
    setOrderWeightIsSet(false);
    this.orderWeight = 0;
    setSimilarArticleIdIsSet(false);
    this.similarArticleId = 0;
    this.publishAt = null;
    this.createdAt = null;
    this.updatedAt = null;
    this.cover = null;
    this.allPics = null;
    this.sourceName = null;
    this.picType = null;
    setRecommendChannelIsSet(false);
    this.recommendChannel = 0;
    setSpringBreezeRecommendIsSet(false);
    this.springBreezeRecommend = 0;
    this.channelName = null;
    setLevelIsSet(false);
    this.level = 0;
    setScoreIsSet(false);
    this.score = 0.0;
    this.scoreItem = null;
    setCommentCountIsSet(false);
    this.commentCount = 0;
    this.showModel = null;
    this.guidance = null;
  }

  @Id 
  @GeneratedValue(generator = "identity") 
  @GenericGenerator(name = "identity", strategy = "identity") 
  @Column(name="id")
  public long getId() {
    return this.id;
  }

  public ArticleVO setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  @Column(name="title")
  public String getTitle() {
    return this.title;
  }

  public ArticleVO setTitle(String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  @Column(name="summary")
  public String getSummary() {
    return this.summary;
  }

  public ArticleVO setSummary(String summary) {
    this.summary = summary;
    return this;
  }

  public void unsetSummary() {
    this.summary = null;
  }

  /** Returns true if field summary is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetSummary() {
    return this.summary != null;
  }

  public void setSummaryIsSet(boolean value) {
    if (!value) {
      this.summary = null;
    }
  }

  @Column(name="content")
  public String getContent() {
    return this.content;
  }

  public ArticleVO setContent(String content) {
    this.content = content;
    return this;
  }

  public void unsetContent() {
    this.content = null;
  }

  /** Returns true if field content is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetContent() {
    return this.content != null;
  }

  public void setContentIsSet(boolean value) {
    if (!value) {
      this.content = null;
    }
  }

  @Column(name="view_count")
  public int getViewCount() {
    return this.viewCount;
  }

  public ArticleVO setViewCount(int viewCount) {
    this.viewCount = viewCount;
    setViewCountIsSet(true);
    return this;
  }

  public void unsetViewCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VIEWCOUNT_ISSET_ID);
  }

  /** Returns true if field viewCount is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetViewCount() {
    return EncodingUtils.testBit(__isset_bitfield, __VIEWCOUNT_ISSET_ID);
  }

  public void setViewCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VIEWCOUNT_ISSET_ID, value);
  }

  @Column(name="original_url")
  public String getOriginalUrl() {
    return this.originalUrl;
  }

  public ArticleVO setOriginalUrl(String originalUrl) {
    this.originalUrl = originalUrl;
    return this;
  }

  public void unsetOriginalUrl() {
    this.originalUrl = null;
  }

  /** Returns true if field originalUrl is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetOriginalUrl() {
    return this.originalUrl != null;
  }

  public void setOriginalUrlIsSet(boolean value) {
    if (!value) {
      this.originalUrl = null;
    }
  }

  @Column(name="channel_id")
  public long getChannelId() {
    return this.channelId;
  }

  public ArticleVO setChannelId(long channelId) {
    this.channelId = channelId;
    setChannelIdIsSet(true);
    return this;
  }

  public void unsetChannelId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CHANNELID_ISSET_ID);
  }

  /** Returns true if field channelId is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetChannelId() {
    return EncodingUtils.testBit(__isset_bitfield, __CHANNELID_ISSET_ID);
  }

  public void setChannelIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CHANNELID_ISSET_ID, value);
  }

  @Column(name="source_id")
  public long getSourceId() {
    return this.sourceId;
  }

  public ArticleVO setSourceId(long sourceId) {
    this.sourceId = sourceId;
    setSourceIdIsSet(true);
    return this;
  }

  public void unsetSourceId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SOURCEID_ISSET_ID);
  }

  /** Returns true if field sourceId is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetSourceId() {
    return EncodingUtils.testBit(__isset_bitfield, __SOURCEID_ISSET_ID);
  }

  public void setSourceIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SOURCEID_ISSET_ID, value);
  }

  @Column(name="comment_flag")
  public int getCommentFlag() {
    return this.commentFlag;
  }

  public ArticleVO setCommentFlag(int commentFlag) {
    this.commentFlag = commentFlag;
    setCommentFlagIsSet(true);
    return this;
  }

  public void unsetCommentFlag() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COMMENTFLAG_ISSET_ID);
  }

  /** Returns true if field commentFlag is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetCommentFlag() {
    return EncodingUtils.testBit(__isset_bitfield, __COMMENTFLAG_ISSET_ID);
  }

  public void setCommentFlagIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COMMENTFLAG_ISSET_ID, value);
  }

  @Column(name="status")
  public int getStatus() {
    return this.status;
  }

  public ArticleVO setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  @Column(name="order_weight")
  public int getOrderWeight() {
    return this.orderWeight;
  }

  public ArticleVO setOrderWeight(int orderWeight) {
    this.orderWeight = orderWeight;
    setOrderWeightIsSet(true);
    return this;
  }

  public void unsetOrderWeight() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDERWEIGHT_ISSET_ID);
  }

  /** Returns true if field orderWeight is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetOrderWeight() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDERWEIGHT_ISSET_ID);
  }

  public void setOrderWeightIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDERWEIGHT_ISSET_ID, value);
  }

  @Column(name="similar_article_id")
  public long getSimilarArticleId() {
    return this.similarArticleId;
  }

  public ArticleVO setSimilarArticleId(long similarArticleId) {
    this.similarArticleId = similarArticleId;
    setSimilarArticleIdIsSet(true);
    return this;
  }

  public void unsetSimilarArticleId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SIMILARARTICLEID_ISSET_ID);
  }

  /** Returns true if field similarArticleId is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetSimilarArticleId() {
    return EncodingUtils.testBit(__isset_bitfield, __SIMILARARTICLEID_ISSET_ID);
  }

  public void setSimilarArticleIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SIMILARARTICLEID_ISSET_ID, value);
  }

  @Column(name="publish_at")
  public String getPublishAt() {
    return this.publishAt;
  }

  public ArticleVO setPublishAt(String publishAt) {
    this.publishAt = publishAt;
    return this;
  }

  public void unsetPublishAt() {
    this.publishAt = null;
  }

  /** Returns true if field publishAt is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetPublishAt() {
    return this.publishAt != null;
  }

  public void setPublishAtIsSet(boolean value) {
    if (!value) {
      this.publishAt = null;
    }
  }

  @Column(name="created_at")
  public String getCreatedAt() {
    return this.createdAt;
  }

  public ArticleVO setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  public void unsetCreatedAt() {
    this.createdAt = null;
  }

  /** Returns true if field createdAt is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetCreatedAt() {
    return this.createdAt != null;
  }

  public void setCreatedAtIsSet(boolean value) {
    if (!value) {
      this.createdAt = null;
    }
  }

  @Column(name="updated_at")
  public String getUpdatedAt() {
    return this.updatedAt;
  }

  public ArticleVO setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  public void unsetUpdatedAt() {
    this.updatedAt = null;
  }

  /** Returns true if field updatedAt is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetUpdatedAt() {
    return this.updatedAt != null;
  }

  public void setUpdatedAtIsSet(boolean value) {
    if (!value) {
      this.updatedAt = null;
    }
  }

  @Column(name="cover")
  public String getCover() {
    return this.cover;
  }

  public ArticleVO setCover(String cover) {
    this.cover = cover;
    return this;
  }

  public void unsetCover() {
    this.cover = null;
  }

  /** Returns true if field cover is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetCover() {
    return this.cover != null;
  }

  public void setCoverIsSet(boolean value) {
    if (!value) {
      this.cover = null;
    }
  }

  @Column(name="all_pics")
  public String getAllPics() {
    return this.allPics;
  }

  public ArticleVO setAllPics(String allPics) {
    this.allPics = allPics;
    return this;
  }

  public void unsetAllPics() {
    this.allPics = null;
  }

  /** Returns true if field allPics is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetAllPics() {
    return this.allPics != null;
  }

  public void setAllPicsIsSet(boolean value) {
    if (!value) {
      this.allPics = null;
    }
  }

  @Column(name="source_name")
  public String getSourceName() {
    return this.sourceName;
  }

  public ArticleVO setSourceName(String sourceName) {
    this.sourceName = sourceName;
    return this;
  }

  public void unsetSourceName() {
    this.sourceName = null;
  }

  /** Returns true if field sourceName is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetSourceName() {
    return this.sourceName != null;
  }

  public void setSourceNameIsSet(boolean value) {
    if (!value) {
      this.sourceName = null;
    }
  }

  @Column(name="pic_type")
  public String getPicType() {
    return this.picType;
  }

  public ArticleVO setPicType(String picType) {
    this.picType = picType;
    return this;
  }

  public void unsetPicType() {
    this.picType = null;
  }

  /** Returns true if field picType is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetPicType() {
    return this.picType != null;
  }

  public void setPicTypeIsSet(boolean value) {
    if (!value) {
      this.picType = null;
    }
  }

  @Column(name="recommend_channel")
  public long getRecommendChannel() {
    return this.recommendChannel;
  }

  public ArticleVO setRecommendChannel(long recommendChannel) {
    this.recommendChannel = recommendChannel;
    setRecommendChannelIsSet(true);
    return this;
  }

  public void unsetRecommendChannel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RECOMMENDCHANNEL_ISSET_ID);
  }

  /** Returns true if field recommendChannel is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetRecommendChannel() {
    return EncodingUtils.testBit(__isset_bitfield, __RECOMMENDCHANNEL_ISSET_ID);
  }

  public void setRecommendChannelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RECOMMENDCHANNEL_ISSET_ID, value);
  }

  @Column(name="spring_breeze_recommend")
  public int getSpringBreezeRecommend() {
    return this.springBreezeRecommend;
  }

  public ArticleVO setSpringBreezeRecommend(int springBreezeRecommend) {
    this.springBreezeRecommend = springBreezeRecommend;
    setSpringBreezeRecommendIsSet(true);
    return this;
  }

  public void unsetSpringBreezeRecommend() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SPRINGBREEZERECOMMEND_ISSET_ID);
  }

  /** Returns true if field springBreezeRecommend is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetSpringBreezeRecommend() {
    return EncodingUtils.testBit(__isset_bitfield, __SPRINGBREEZERECOMMEND_ISSET_ID);
  }

  public void setSpringBreezeRecommendIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SPRINGBREEZERECOMMEND_ISSET_ID, value);
  }

  @Column(name="channel_name")
  public String getChannelName() {
    return this.channelName;
  }

  public ArticleVO setChannelName(String channelName) {
    this.channelName = channelName;
    return this;
  }

  public void unsetChannelName() {
    this.channelName = null;
  }

  /** Returns true if field channelName is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetChannelName() {
    return this.channelName != null;
  }

  public void setChannelNameIsSet(boolean value) {
    if (!value) {
      this.channelName = null;
    }
  }

  @Column(name="level")
  public int getLevel() {
    return this.level;
  }

  public ArticleVO setLevel(int level) {
    this.level = level;
    setLevelIsSet(true);
    return this;
  }

  public void unsetLevel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LEVEL_ISSET_ID);
  }

  /** Returns true if field level is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetLevel() {
    return EncodingUtils.testBit(__isset_bitfield, __LEVEL_ISSET_ID);
  }

  public void setLevelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LEVEL_ISSET_ID, value);
  }

  @Column(name="score")
  public double getScore() {
    return this.score;
  }

  public ArticleVO setScore(double score) {
    this.score = score;
    setScoreIsSet(true);
    return this;
  }

  public void unsetScore() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SCORE_ISSET_ID);
  }

  /** Returns true if field score is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetScore() {
    return EncodingUtils.testBit(__isset_bitfield, __SCORE_ISSET_ID);
  }

  public void setScoreIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SCORE_ISSET_ID, value);
  }

  @Column(name="score_item")
  public String getScoreItem() {
    return this.scoreItem;
  }

  public ArticleVO setScoreItem(String scoreItem) {
    this.scoreItem = scoreItem;
    return this;
  }

  public void unsetScoreItem() {
    this.scoreItem = null;
  }

  /** Returns true if field scoreItem is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetScoreItem() {
    return this.scoreItem != null;
  }

  public void setScoreItemIsSet(boolean value) {
    if (!value) {
      this.scoreItem = null;
    }
  }

  @Column(name="comment_count")
  public int getCommentCount() {
    return this.commentCount;
  }

  public ArticleVO setCommentCount(int commentCount) {
    this.commentCount = commentCount;
    setCommentCountIsSet(true);
    return this;
  }

  public void unsetCommentCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COMMENTCOUNT_ISSET_ID);
  }

  /** Returns true if field commentCount is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetCommentCount() {
    return EncodingUtils.testBit(__isset_bitfield, __COMMENTCOUNT_ISSET_ID);
  }

  public void setCommentCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COMMENTCOUNT_ISSET_ID, value);
  }

  @Column(name="show_model")
  public String getShowModel() {
    return this.showModel;
  }

  public ArticleVO setShowModel(String showModel) {
    this.showModel = showModel;
    return this;
  }

  public void unsetShowModel() {
    this.showModel = null;
  }

  /** Returns true if field showModel is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetShowModel() {
    return this.showModel != null;
  }

  public void setShowModelIsSet(boolean value) {
    if (!value) {
      this.showModel = null;
    }
  }

  @Column(name="guidance")
  public String getGuidance() {
    return this.guidance;
  }

  public ArticleVO setGuidance(String guidance) {
    this.guidance = guidance;
    return this;
  }

  public void unsetGuidance() {
    this.guidance = null;
  }

  /** Returns true if field guidance is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSetGuidance() {
    return this.guidance != null;
  }

  public void setGuidanceIsSet(boolean value) {
    if (!value) {
      this.guidance = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((String)value);
      }
      break;

    case SUMMARY:
      if (value == null) {
        unsetSummary();
      } else {
        setSummary((String)value);
      }
      break;

    case CONTENT:
      if (value == null) {
        unsetContent();
      } else {
        setContent((String)value);
      }
      break;

    case VIEW_COUNT:
      if (value == null) {
        unsetViewCount();
      } else {
        setViewCount((Integer)value);
      }
      break;

    case ORIGINAL_URL:
      if (value == null) {
        unsetOriginalUrl();
      } else {
        setOriginalUrl((String)value);
      }
      break;

    case CHANNEL_ID:
      if (value == null) {
        unsetChannelId();
      } else {
        setChannelId((Long)value);
      }
      break;

    case SOURCE_ID:
      if (value == null) {
        unsetSourceId();
      } else {
        setSourceId((Long)value);
      }
      break;

    case COMMENT_FLAG:
      if (value == null) {
        unsetCommentFlag();
      } else {
        setCommentFlag((Integer)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    case ORDER_WEIGHT:
      if (value == null) {
        unsetOrderWeight();
      } else {
        setOrderWeight((Integer)value);
      }
      break;

    case SIMILAR_ARTICLE_ID:
      if (value == null) {
        unsetSimilarArticleId();
      } else {
        setSimilarArticleId((Long)value);
      }
      break;

    case PUBLISH_AT:
      if (value == null) {
        unsetPublishAt();
      } else {
        setPublishAt((String)value);
      }
      break;

    case CREATED_AT:
      if (value == null) {
        unsetCreatedAt();
      } else {
        setCreatedAt((String)value);
      }
      break;

    case UPDATED_AT:
      if (value == null) {
        unsetUpdatedAt();
      } else {
        setUpdatedAt((String)value);
      }
      break;

    case COVER:
      if (value == null) {
        unsetCover();
      } else {
        setCover((String)value);
      }
      break;

    case ALL_PICS:
      if (value == null) {
        unsetAllPics();
      } else {
        setAllPics((String)value);
      }
      break;

    case SOURCE_NAME:
      if (value == null) {
        unsetSourceName();
      } else {
        setSourceName((String)value);
      }
      break;

    case PIC_TYPE:
      if (value == null) {
        unsetPicType();
      } else {
        setPicType((String)value);
      }
      break;

    case RECOMMEND_CHANNEL:
      if (value == null) {
        unsetRecommendChannel();
      } else {
        setRecommendChannel((Long)value);
      }
      break;

    case SPRING_BREEZE_RECOMMEND:
      if (value == null) {
        unsetSpringBreezeRecommend();
      } else {
        setSpringBreezeRecommend((Integer)value);
      }
      break;

    case CHANNEL_NAME:
      if (value == null) {
        unsetChannelName();
      } else {
        setChannelName((String)value);
      }
      break;

    case LEVEL:
      if (value == null) {
        unsetLevel();
      } else {
        setLevel((Integer)value);
      }
      break;

    case SCORE:
      if (value == null) {
        unsetScore();
      } else {
        setScore((Double)value);
      }
      break;

    case SCORE_ITEM:
      if (value == null) {
        unsetScoreItem();
      } else {
        setScoreItem((String)value);
      }
      break;

    case COMMENT_COUNT:
      if (value == null) {
        unsetCommentCount();
      } else {
        setCommentCount((Integer)value);
      }
      break;

    case SHOW_MODEL:
      if (value == null) {
        unsetShowModel();
      } else {
        setShowModel((String)value);
      }
      break;

    case GUIDANCE:
      if (value == null) {
        unsetGuidance();
      } else {
        setGuidance((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case TITLE:
      return getTitle();

    case SUMMARY:
      return getSummary();

    case CONTENT:
      return getContent();

    case VIEW_COUNT:
      return Integer.valueOf(getViewCount());

    case ORIGINAL_URL:
      return getOriginalUrl();

    case CHANNEL_ID:
      return Long.valueOf(getChannelId());

    case SOURCE_ID:
      return Long.valueOf(getSourceId());

    case COMMENT_FLAG:
      return Integer.valueOf(getCommentFlag());

    case STATUS:
      return Integer.valueOf(getStatus());

    case ORDER_WEIGHT:
      return Integer.valueOf(getOrderWeight());

    case SIMILAR_ARTICLE_ID:
      return Long.valueOf(getSimilarArticleId());

    case PUBLISH_AT:
      return getPublishAt();

    case CREATED_AT:
      return getCreatedAt();

    case UPDATED_AT:
      return getUpdatedAt();

    case COVER:
      return getCover();

    case ALL_PICS:
      return getAllPics();

    case SOURCE_NAME:
      return getSourceName();

    case PIC_TYPE:
      return getPicType();

    case RECOMMEND_CHANNEL:
      return Long.valueOf(getRecommendChannel());

    case SPRING_BREEZE_RECOMMEND:
      return Integer.valueOf(getSpringBreezeRecommend());

    case CHANNEL_NAME:
      return getChannelName();

    case LEVEL:
      return Integer.valueOf(getLevel());

    case SCORE:
      return Double.valueOf(getScore());

    case SCORE_ITEM:
      return getScoreItem();

    case COMMENT_COUNT:
      return Integer.valueOf(getCommentCount());

    case SHOW_MODEL:
      return getShowModel();

    case GUIDANCE:
      return getGuidance();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Transient
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case TITLE:
      return isSetTitle();
    case SUMMARY:
      return isSetSummary();
    case CONTENT:
      return isSetContent();
    case VIEW_COUNT:
      return isSetViewCount();
    case ORIGINAL_URL:
      return isSetOriginalUrl();
    case CHANNEL_ID:
      return isSetChannelId();
    case SOURCE_ID:
      return isSetSourceId();
    case COMMENT_FLAG:
      return isSetCommentFlag();
    case STATUS:
      return isSetStatus();
    case ORDER_WEIGHT:
      return isSetOrderWeight();
    case SIMILAR_ARTICLE_ID:
      return isSetSimilarArticleId();
    case PUBLISH_AT:
      return isSetPublishAt();
    case CREATED_AT:
      return isSetCreatedAt();
    case UPDATED_AT:
      return isSetUpdatedAt();
    case COVER:
      return isSetCover();
    case ALL_PICS:
      return isSetAllPics();
    case SOURCE_NAME:
      return isSetSourceName();
    case PIC_TYPE:
      return isSetPicType();
    case RECOMMEND_CHANNEL:
      return isSetRecommendChannel();
    case SPRING_BREEZE_RECOMMEND:
      return isSetSpringBreezeRecommend();
    case CHANNEL_NAME:
      return isSetChannelName();
    case LEVEL:
      return isSetLevel();
    case SCORE:
      return isSetScore();
    case SCORE_ITEM:
      return isSetScoreItem();
    case COMMENT_COUNT:
      return isSetCommentCount();
    case SHOW_MODEL:
      return isSetShowModel();
    case GUIDANCE:
      return isSetGuidance();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ArticleVO)
      return this.equals((ArticleVO)that);
    return false;
  }

  public boolean equals(ArticleVO that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_summary = true && this.isSetSummary();
    boolean that_present_summary = true && that.isSetSummary();
    if (this_present_summary || that_present_summary) {
      if (!(this_present_summary && that_present_summary))
        return false;
      if (!this.summary.equals(that.summary))
        return false;
    }

    boolean this_present_content = true && this.isSetContent();
    boolean that_present_content = true && that.isSetContent();
    if (this_present_content || that_present_content) {
      if (!(this_present_content && that_present_content))
        return false;
      if (!this.content.equals(that.content))
        return false;
    }

    boolean this_present_viewCount = true;
    boolean that_present_viewCount = true;
    if (this_present_viewCount || that_present_viewCount) {
      if (!(this_present_viewCount && that_present_viewCount))
        return false;
      if (this.viewCount != that.viewCount)
        return false;
    }

    boolean this_present_originalUrl = true && this.isSetOriginalUrl();
    boolean that_present_originalUrl = true && that.isSetOriginalUrl();
    if (this_present_originalUrl || that_present_originalUrl) {
      if (!(this_present_originalUrl && that_present_originalUrl))
        return false;
      if (!this.originalUrl.equals(that.originalUrl))
        return false;
    }

    boolean this_present_channelId = true;
    boolean that_present_channelId = true;
    if (this_present_channelId || that_present_channelId) {
      if (!(this_present_channelId && that_present_channelId))
        return false;
      if (this.channelId != that.channelId)
        return false;
    }

    boolean this_present_sourceId = true;
    boolean that_present_sourceId = true;
    if (this_present_sourceId || that_present_sourceId) {
      if (!(this_present_sourceId && that_present_sourceId))
        return false;
      if (this.sourceId != that.sourceId)
        return false;
    }

    boolean this_present_commentFlag = true;
    boolean that_present_commentFlag = true;
    if (this_present_commentFlag || that_present_commentFlag) {
      if (!(this_present_commentFlag && that_present_commentFlag))
        return false;
      if (this.commentFlag != that.commentFlag)
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_orderWeight = true;
    boolean that_present_orderWeight = true;
    if (this_present_orderWeight || that_present_orderWeight) {
      if (!(this_present_orderWeight && that_present_orderWeight))
        return false;
      if (this.orderWeight != that.orderWeight)
        return false;
    }

    boolean this_present_similarArticleId = true;
    boolean that_present_similarArticleId = true;
    if (this_present_similarArticleId || that_present_similarArticleId) {
      if (!(this_present_similarArticleId && that_present_similarArticleId))
        return false;
      if (this.similarArticleId != that.similarArticleId)
        return false;
    }

    boolean this_present_publishAt = true && this.isSetPublishAt();
    boolean that_present_publishAt = true && that.isSetPublishAt();
    if (this_present_publishAt || that_present_publishAt) {
      if (!(this_present_publishAt && that_present_publishAt))
        return false;
      if (!this.publishAt.equals(that.publishAt))
        return false;
    }

    boolean this_present_createdAt = true && this.isSetCreatedAt();
    boolean that_present_createdAt = true && that.isSetCreatedAt();
    if (this_present_createdAt || that_present_createdAt) {
      if (!(this_present_createdAt && that_present_createdAt))
        return false;
      if (!this.createdAt.equals(that.createdAt))
        return false;
    }

    boolean this_present_updatedAt = true && this.isSetUpdatedAt();
    boolean that_present_updatedAt = true && that.isSetUpdatedAt();
    if (this_present_updatedAt || that_present_updatedAt) {
      if (!(this_present_updatedAt && that_present_updatedAt))
        return false;
      if (!this.updatedAt.equals(that.updatedAt))
        return false;
    }

    boolean this_present_cover = true && this.isSetCover();
    boolean that_present_cover = true && that.isSetCover();
    if (this_present_cover || that_present_cover) {
      if (!(this_present_cover && that_present_cover))
        return false;
      if (!this.cover.equals(that.cover))
        return false;
    }

    boolean this_present_allPics = true && this.isSetAllPics();
    boolean that_present_allPics = true && that.isSetAllPics();
    if (this_present_allPics || that_present_allPics) {
      if (!(this_present_allPics && that_present_allPics))
        return false;
      if (!this.allPics.equals(that.allPics))
        return false;
    }

    boolean this_present_sourceName = true && this.isSetSourceName();
    boolean that_present_sourceName = true && that.isSetSourceName();
    if (this_present_sourceName || that_present_sourceName) {
      if (!(this_present_sourceName && that_present_sourceName))
        return false;
      if (!this.sourceName.equals(that.sourceName))
        return false;
    }

    boolean this_present_picType = true && this.isSetPicType();
    boolean that_present_picType = true && that.isSetPicType();
    if (this_present_picType || that_present_picType) {
      if (!(this_present_picType && that_present_picType))
        return false;
      if (!this.picType.equals(that.picType))
        return false;
    }

    boolean this_present_recommendChannel = true;
    boolean that_present_recommendChannel = true;
    if (this_present_recommendChannel || that_present_recommendChannel) {
      if (!(this_present_recommendChannel && that_present_recommendChannel))
        return false;
      if (this.recommendChannel != that.recommendChannel)
        return false;
    }

    boolean this_present_springBreezeRecommend = true;
    boolean that_present_springBreezeRecommend = true;
    if (this_present_springBreezeRecommend || that_present_springBreezeRecommend) {
      if (!(this_present_springBreezeRecommend && that_present_springBreezeRecommend))
        return false;
      if (this.springBreezeRecommend != that.springBreezeRecommend)
        return false;
    }

    boolean this_present_channelName = true && this.isSetChannelName();
    boolean that_present_channelName = true && that.isSetChannelName();
    if (this_present_channelName || that_present_channelName) {
      if (!(this_present_channelName && that_present_channelName))
        return false;
      if (!this.channelName.equals(that.channelName))
        return false;
    }

    boolean this_present_level = true;
    boolean that_present_level = true;
    if (this_present_level || that_present_level) {
      if (!(this_present_level && that_present_level))
        return false;
      if (this.level != that.level)
        return false;
    }

    boolean this_present_score = true;
    boolean that_present_score = true;
    if (this_present_score || that_present_score) {
      if (!(this_present_score && that_present_score))
        return false;
      if (this.score != that.score)
        return false;
    }

    boolean this_present_scoreItem = true && this.isSetScoreItem();
    boolean that_present_scoreItem = true && that.isSetScoreItem();
    if (this_present_scoreItem || that_present_scoreItem) {
      if (!(this_present_scoreItem && that_present_scoreItem))
        return false;
      if (!this.scoreItem.equals(that.scoreItem))
        return false;
    }

    boolean this_present_commentCount = true;
    boolean that_present_commentCount = true;
    if (this_present_commentCount || that_present_commentCount) {
      if (!(this_present_commentCount && that_present_commentCount))
        return false;
      if (this.commentCount != that.commentCount)
        return false;
    }

    boolean this_present_showModel = true && this.isSetShowModel();
    boolean that_present_showModel = true && that.isSetShowModel();
    if (this_present_showModel || that_present_showModel) {
      if (!(this_present_showModel && that_present_showModel))
        return false;
      if (!this.showModel.equals(that.showModel))
        return false;
    }

    boolean this_present_guidance = true && this.isSetGuidance();
    boolean that_present_guidance = true && that.isSetGuidance();
    if (this_present_guidance || that_present_guidance) {
      if (!(this_present_guidance && that_present_guidance))
        return false;
      if (!this.guidance.equals(that.guidance))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(ArticleVO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    ArticleVO typedOther = (ArticleVO)other;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(typedOther.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, typedOther.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTitle()).compareTo(typedOther.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, typedOther.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSummary()).compareTo(typedOther.isSetSummary());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSummary()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.summary, typedOther.summary);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContent()).compareTo(typedOther.isSetContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.content, typedOther.content);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetViewCount()).compareTo(typedOther.isSetViewCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetViewCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.viewCount, typedOther.viewCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOriginalUrl()).compareTo(typedOther.isSetOriginalUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOriginalUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originalUrl, typedOther.originalUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannelId()).compareTo(typedOther.isSetChannelId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelId, typedOther.channelId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSourceId()).compareTo(typedOther.isSetSourceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSourceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sourceId, typedOther.sourceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCommentFlag()).compareTo(typedOther.isSetCommentFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCommentFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.commentFlag, typedOther.commentFlag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(typedOther.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, typedOther.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderWeight()).compareTo(typedOther.isSetOrderWeight());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderWeight()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderWeight, typedOther.orderWeight);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSimilarArticleId()).compareTo(typedOther.isSetSimilarArticleId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSimilarArticleId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.similarArticleId, typedOther.similarArticleId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPublishAt()).compareTo(typedOther.isSetPublishAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublishAt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.publishAt, typedOther.publishAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreatedAt()).compareTo(typedOther.isSetCreatedAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatedAt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createdAt, typedOther.createdAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdatedAt()).compareTo(typedOther.isSetUpdatedAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdatedAt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updatedAt, typedOther.updatedAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCover()).compareTo(typedOther.isSetCover());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCover()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cover, typedOther.cover);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAllPics()).compareTo(typedOther.isSetAllPics());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAllPics()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.allPics, typedOther.allPics);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSourceName()).compareTo(typedOther.isSetSourceName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSourceName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sourceName, typedOther.sourceName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPicType()).compareTo(typedOther.isSetPicType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPicType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.picType, typedOther.picType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecommendChannel()).compareTo(typedOther.isSetRecommendChannel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommendChannel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommendChannel, typedOther.recommendChannel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSpringBreezeRecommend()).compareTo(typedOther.isSetSpringBreezeRecommend());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSpringBreezeRecommend()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.springBreezeRecommend, typedOther.springBreezeRecommend);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannelName()).compareTo(typedOther.isSetChannelName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelName, typedOther.channelName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLevel()).compareTo(typedOther.isSetLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.level, typedOther.level);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetScore()).compareTo(typedOther.isSetScore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetScore()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.score, typedOther.score);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetScoreItem()).compareTo(typedOther.isSetScoreItem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetScoreItem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.scoreItem, typedOther.scoreItem);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCommentCount()).compareTo(typedOther.isSetCommentCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCommentCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.commentCount, typedOther.commentCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShowModel()).compareTo(typedOther.isSetShowModel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShowModel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.showModel, typedOther.showModel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGuidance()).compareTo(typedOther.isSetGuidance());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGuidance()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.guidance, typedOther.guidance);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ArticleVO(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("summary:");
    if (this.summary == null) {
      sb.append("null");
    } else {
      sb.append(this.summary);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("content:");
    if (this.content == null) {
      sb.append("null");
    } else {
      sb.append(this.content);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("viewCount:");
    sb.append(this.viewCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("originalUrl:");
    if (this.originalUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.originalUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channelId:");
    sb.append(this.channelId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sourceId:");
    sb.append(this.sourceId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("commentFlag:");
    sb.append(this.commentFlag);
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderWeight:");
    sb.append(this.orderWeight);
    first = false;
    if (!first) sb.append(", ");
    sb.append("similarArticleId:");
    sb.append(this.similarArticleId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("publishAt:");
    if (this.publishAt == null) {
      sb.append("null");
    } else {
      sb.append(this.publishAt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createdAt:");
    if (this.createdAt == null) {
      sb.append("null");
    } else {
      sb.append(this.createdAt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("updatedAt:");
    if (this.updatedAt == null) {
      sb.append("null");
    } else {
      sb.append(this.updatedAt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cover:");
    if (this.cover == null) {
      sb.append("null");
    } else {
      sb.append(this.cover);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("allPics:");
    if (this.allPics == null) {
      sb.append("null");
    } else {
      sb.append(this.allPics);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sourceName:");
    if (this.sourceName == null) {
      sb.append("null");
    } else {
      sb.append(this.sourceName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("picType:");
    if (this.picType == null) {
      sb.append("null");
    } else {
      sb.append(this.picType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("recommendChannel:");
    sb.append(this.recommendChannel);
    first = false;
    if (!first) sb.append(", ");
    sb.append("springBreezeRecommend:");
    sb.append(this.springBreezeRecommend);
    first = false;
    if (!first) sb.append(", ");
    sb.append("channelName:");
    if (this.channelName == null) {
      sb.append("null");
    } else {
      sb.append(this.channelName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("level:");
    sb.append(this.level);
    first = false;
    if (!first) sb.append(", ");
    sb.append("score:");
    sb.append(this.score);
    first = false;
    if (!first) sb.append(", ");
    sb.append("scoreItem:");
    if (this.scoreItem == null) {
      sb.append("null");
    } else {
      sb.append(this.scoreItem);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("commentCount:");
    sb.append(this.commentCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("showModel:");
    if (this.showModel == null) {
      sb.append("null");
    } else {
      sb.append(this.showModel);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("guidance:");
    if (this.guidance == null) {
      sb.append("null");
    } else {
      sb.append(this.guidance);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ArticleVOStandardSchemeFactory implements SchemeFactory {
    public ArticleVOStandardScheme getScheme() {
      return new ArticleVOStandardScheme();
    }
  }

  private static class ArticleVOStandardScheme extends StandardScheme<ArticleVO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ArticleVO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SUMMARY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.summary = iprot.readString();
              struct.setSummaryIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.content = iprot.readString();
              struct.setContentIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // VIEW_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.viewCount = iprot.readI32();
              struct.setViewCountIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ORIGINAL_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.originalUrl = iprot.readString();
              struct.setOriginalUrlIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CHANNEL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.channelId = iprot.readI64();
              struct.setChannelIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SOURCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sourceId = iprot.readI64();
              struct.setSourceIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // COMMENT_FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.commentFlag = iprot.readI32();
              struct.setCommentFlagIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ORDER_WEIGHT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orderWeight = iprot.readI32();
              struct.setOrderWeightIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SIMILAR_ARTICLE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.similarArticleId = iprot.readI64();
              struct.setSimilarArticleIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // PUBLISH_AT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.publishAt = iprot.readString();
              struct.setPublishAtIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CREATED_AT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createdAt = iprot.readString();
              struct.setCreatedAtIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // UPDATED_AT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updatedAt = iprot.readString();
              struct.setUpdatedAtIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // COVER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cover = iprot.readString();
              struct.setCoverIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // ALL_PICS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.allPics = iprot.readString();
              struct.setAllPicsIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // SOURCE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sourceName = iprot.readString();
              struct.setSourceNameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // PIC_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.picType = iprot.readString();
              struct.setPicTypeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // RECOMMEND_CHANNEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.recommendChannel = iprot.readI64();
              struct.setRecommendChannelIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // SPRING_BREEZE_RECOMMEND
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.springBreezeRecommend = iprot.readI32();
              struct.setSpringBreezeRecommendIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // CHANNEL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.channelName = iprot.readString();
              struct.setChannelNameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.level = iprot.readI32();
              struct.setLevelIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // SCORE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.score = iprot.readDouble();
              struct.setScoreIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // SCORE_ITEM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.scoreItem = iprot.readString();
              struct.setScoreItemIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // COMMENT_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.commentCount = iprot.readI32();
              struct.setCommentCountIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // SHOW_MODEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.showModel = iprot.readString();
              struct.setShowModelIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // GUIDANCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.guidance = iprot.readString();
              struct.setGuidanceIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ArticleVO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI64(struct.id);
      oprot.writeFieldEnd();
      if (struct.title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(struct.title);
        oprot.writeFieldEnd();
      }
      if (struct.summary != null) {
        oprot.writeFieldBegin(SUMMARY_FIELD_DESC);
        oprot.writeString(struct.summary);
        oprot.writeFieldEnd();
      }
      if (struct.content != null) {
        oprot.writeFieldBegin(CONTENT_FIELD_DESC);
        oprot.writeString(struct.content);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(VIEW_COUNT_FIELD_DESC);
      oprot.writeI32(struct.viewCount);
      oprot.writeFieldEnd();
      if (struct.originalUrl != null) {
        oprot.writeFieldBegin(ORIGINAL_URL_FIELD_DESC);
        oprot.writeString(struct.originalUrl);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CHANNEL_ID_FIELD_DESC);
      oprot.writeI64(struct.channelId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SOURCE_ID_FIELD_DESC);
      oprot.writeI64(struct.sourceId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COMMENT_FLAG_FIELD_DESC);
      oprot.writeI32(struct.commentFlag);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ORDER_WEIGHT_FIELD_DESC);
      oprot.writeI32(struct.orderWeight);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SIMILAR_ARTICLE_ID_FIELD_DESC);
      oprot.writeI64(struct.similarArticleId);
      oprot.writeFieldEnd();
      if (struct.publishAt != null) {
        oprot.writeFieldBegin(PUBLISH_AT_FIELD_DESC);
        oprot.writeString(struct.publishAt);
        oprot.writeFieldEnd();
      }
      if (struct.createdAt != null) {
        oprot.writeFieldBegin(CREATED_AT_FIELD_DESC);
        oprot.writeString(struct.createdAt);
        oprot.writeFieldEnd();
      }
      if (struct.updatedAt != null) {
        oprot.writeFieldBegin(UPDATED_AT_FIELD_DESC);
        oprot.writeString(struct.updatedAt);
        oprot.writeFieldEnd();
      }
      if (struct.cover != null) {
        oprot.writeFieldBegin(COVER_FIELD_DESC);
        oprot.writeString(struct.cover);
        oprot.writeFieldEnd();
      }
      if (struct.allPics != null) {
        oprot.writeFieldBegin(ALL_PICS_FIELD_DESC);
        oprot.writeString(struct.allPics);
        oprot.writeFieldEnd();
      }
      if (struct.sourceName != null) {
        oprot.writeFieldBegin(SOURCE_NAME_FIELD_DESC);
        oprot.writeString(struct.sourceName);
        oprot.writeFieldEnd();
      }
      if (struct.picType != null) {
        oprot.writeFieldBegin(PIC_TYPE_FIELD_DESC);
        oprot.writeString(struct.picType);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RECOMMEND_CHANNEL_FIELD_DESC);
      oprot.writeI64(struct.recommendChannel);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SPRING_BREEZE_RECOMMEND_FIELD_DESC);
      oprot.writeI32(struct.springBreezeRecommend);
      oprot.writeFieldEnd();
      if (struct.channelName != null) {
        oprot.writeFieldBegin(CHANNEL_NAME_FIELD_DESC);
        oprot.writeString(struct.channelName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LEVEL_FIELD_DESC);
      oprot.writeI32(struct.level);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SCORE_FIELD_DESC);
      oprot.writeDouble(struct.score);
      oprot.writeFieldEnd();
      if (struct.scoreItem != null) {
        oprot.writeFieldBegin(SCORE_ITEM_FIELD_DESC);
        oprot.writeString(struct.scoreItem);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(COMMENT_COUNT_FIELD_DESC);
      oprot.writeI32(struct.commentCount);
      oprot.writeFieldEnd();
      if (struct.showModel != null) {
        oprot.writeFieldBegin(SHOW_MODEL_FIELD_DESC);
        oprot.writeString(struct.showModel);
        oprot.writeFieldEnd();
      }
      if (struct.guidance != null) {
        oprot.writeFieldBegin(GUIDANCE_FIELD_DESC);
        oprot.writeString(struct.guidance);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ArticleVOTupleSchemeFactory implements SchemeFactory {
    public ArticleVOTupleScheme getScheme() {
      return new ArticleVOTupleScheme();
    }
  }

  private static class ArticleVOTupleScheme extends TupleScheme<ArticleVO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ArticleVO struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetTitle()) {
        optionals.set(1);
      }
      if (struct.isSetSummary()) {
        optionals.set(2);
      }
      if (struct.isSetContent()) {
        optionals.set(3);
      }
      if (struct.isSetViewCount()) {
        optionals.set(4);
      }
      if (struct.isSetOriginalUrl()) {
        optionals.set(5);
      }
      if (struct.isSetChannelId()) {
        optionals.set(6);
      }
      if (struct.isSetSourceId()) {
        optionals.set(7);
      }
      if (struct.isSetCommentFlag()) {
        optionals.set(8);
      }
      if (struct.isSetStatus()) {
        optionals.set(9);
      }
      if (struct.isSetOrderWeight()) {
        optionals.set(10);
      }
      if (struct.isSetSimilarArticleId()) {
        optionals.set(11);
      }
      if (struct.isSetPublishAt()) {
        optionals.set(12);
      }
      if (struct.isSetCreatedAt()) {
        optionals.set(13);
      }
      if (struct.isSetUpdatedAt()) {
        optionals.set(14);
      }
      if (struct.isSetCover()) {
        optionals.set(15);
      }
      if (struct.isSetAllPics()) {
        optionals.set(16);
      }
      if (struct.isSetSourceName()) {
        optionals.set(17);
      }
      if (struct.isSetPicType()) {
        optionals.set(18);
      }
      if (struct.isSetRecommendChannel()) {
        optionals.set(19);
      }
      if (struct.isSetSpringBreezeRecommend()) {
        optionals.set(20);
      }
      if (struct.isSetChannelName()) {
        optionals.set(21);
      }
      if (struct.isSetLevel()) {
        optionals.set(22);
      }
      if (struct.isSetScore()) {
        optionals.set(23);
      }
      if (struct.isSetScoreItem()) {
        optionals.set(24);
      }
      if (struct.isSetCommentCount()) {
        optionals.set(25);
      }
      if (struct.isSetShowModel()) {
        optionals.set(26);
      }
      if (struct.isSetGuidance()) {
        optionals.set(27);
      }
      oprot.writeBitSet(optionals, 28);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetSummary()) {
        oprot.writeString(struct.summary);
      }
      if (struct.isSetContent()) {
        oprot.writeString(struct.content);
      }
      if (struct.isSetViewCount()) {
        oprot.writeI32(struct.viewCount);
      }
      if (struct.isSetOriginalUrl()) {
        oprot.writeString(struct.originalUrl);
      }
      if (struct.isSetChannelId()) {
        oprot.writeI64(struct.channelId);
      }
      if (struct.isSetSourceId()) {
        oprot.writeI64(struct.sourceId);
      }
      if (struct.isSetCommentFlag()) {
        oprot.writeI32(struct.commentFlag);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status);
      }
      if (struct.isSetOrderWeight()) {
        oprot.writeI32(struct.orderWeight);
      }
      if (struct.isSetSimilarArticleId()) {
        oprot.writeI64(struct.similarArticleId);
      }
      if (struct.isSetPublishAt()) {
        oprot.writeString(struct.publishAt);
      }
      if (struct.isSetCreatedAt()) {
        oprot.writeString(struct.createdAt);
      }
      if (struct.isSetUpdatedAt()) {
        oprot.writeString(struct.updatedAt);
      }
      if (struct.isSetCover()) {
        oprot.writeString(struct.cover);
      }
      if (struct.isSetAllPics()) {
        oprot.writeString(struct.allPics);
      }
      if (struct.isSetSourceName()) {
        oprot.writeString(struct.sourceName);
      }
      if (struct.isSetPicType()) {
        oprot.writeString(struct.picType);
      }
      if (struct.isSetRecommendChannel()) {
        oprot.writeI64(struct.recommendChannel);
      }
      if (struct.isSetSpringBreezeRecommend()) {
        oprot.writeI32(struct.springBreezeRecommend);
      }
      if (struct.isSetChannelName()) {
        oprot.writeString(struct.channelName);
      }
      if (struct.isSetLevel()) {
        oprot.writeI32(struct.level);
      }
      if (struct.isSetScore()) {
        oprot.writeDouble(struct.score);
      }
      if (struct.isSetScoreItem()) {
        oprot.writeString(struct.scoreItem);
      }
      if (struct.isSetCommentCount()) {
        oprot.writeI32(struct.commentCount);
      }
      if (struct.isSetShowModel()) {
        oprot.writeString(struct.showModel);
      }
      if (struct.isSetGuidance()) {
        oprot.writeString(struct.guidance);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ArticleVO struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(28);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(2)) {
        struct.summary = iprot.readString();
        struct.setSummaryIsSet(true);
      }
      if (incoming.get(3)) {
        struct.content = iprot.readString();
        struct.setContentIsSet(true);
      }
      if (incoming.get(4)) {
        struct.viewCount = iprot.readI32();
        struct.setViewCountIsSet(true);
      }
      if (incoming.get(5)) {
        struct.originalUrl = iprot.readString();
        struct.setOriginalUrlIsSet(true);
      }
      if (incoming.get(6)) {
        struct.channelId = iprot.readI64();
        struct.setChannelIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.sourceId = iprot.readI64();
        struct.setSourceIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.commentFlag = iprot.readI32();
        struct.setCommentFlagIsSet(true);
      }
      if (incoming.get(9)) {
        struct.status = iprot.readI32();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(10)) {
        struct.orderWeight = iprot.readI32();
        struct.setOrderWeightIsSet(true);
      }
      if (incoming.get(11)) {
        struct.similarArticleId = iprot.readI64();
        struct.setSimilarArticleIdIsSet(true);
      }
      if (incoming.get(12)) {
        struct.publishAt = iprot.readString();
        struct.setPublishAtIsSet(true);
      }
      if (incoming.get(13)) {
        struct.createdAt = iprot.readString();
        struct.setCreatedAtIsSet(true);
      }
      if (incoming.get(14)) {
        struct.updatedAt = iprot.readString();
        struct.setUpdatedAtIsSet(true);
      }
      if (incoming.get(15)) {
        struct.cover = iprot.readString();
        struct.setCoverIsSet(true);
      }
      if (incoming.get(16)) {
        struct.allPics = iprot.readString();
        struct.setAllPicsIsSet(true);
      }
      if (incoming.get(17)) {
        struct.sourceName = iprot.readString();
        struct.setSourceNameIsSet(true);
      }
      if (incoming.get(18)) {
        struct.picType = iprot.readString();
        struct.setPicTypeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.recommendChannel = iprot.readI64();
        struct.setRecommendChannelIsSet(true);
      }
      if (incoming.get(20)) {
        struct.springBreezeRecommend = iprot.readI32();
        struct.setSpringBreezeRecommendIsSet(true);
      }
      if (incoming.get(21)) {
        struct.channelName = iprot.readString();
        struct.setChannelNameIsSet(true);
      }
      if (incoming.get(22)) {
        struct.level = iprot.readI32();
        struct.setLevelIsSet(true);
      }
      if (incoming.get(23)) {
        struct.score = iprot.readDouble();
        struct.setScoreIsSet(true);
      }
      if (incoming.get(24)) {
        struct.scoreItem = iprot.readString();
        struct.setScoreItemIsSet(true);
      }
      if (incoming.get(25)) {
        struct.commentCount = iprot.readI32();
        struct.setCommentCountIsSet(true);
      }
      if (incoming.get(26)) {
        struct.showModel = iprot.readString();
        struct.setShowModelIsSet(true);
      }
      if (incoming.get(27)) {
        struct.guidance = iprot.readString();
        struct.setGuidanceIsSet(true);
      }
    }
  }

}

